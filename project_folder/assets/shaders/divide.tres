[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "texture"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "screen_texture"

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 5

[sub_resource type="VisualShaderNodeTexture" id=6]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id=7]
operator = 3

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Input:3

// Texture2D:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, n_out2p0.xy);
		n_out6p0 = TEXTURE_tex_read.rgb;
		n_out6p1 = TEXTURE_tex_read.a;
	}

// Input:4
	vec3 n_out4p0 = vec3(SCREEN_UV, 0.0);

// Input:5

// Texture2D:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 SCREEN_TEXTURE_tex_read = texture(SCREEN_TEXTURE, n_out4p0.xy);
		n_out7p0 = SCREEN_TEXTURE_tex_read.rgb;
		n_out7p1 = SCREEN_TEXTURE_tex_read.a;
	}

// VectorOp:8
	vec3 n_out8p0 = n_out6p0 / n_out7p0;

// Output:0
	COLOR.rgb = n_out8p0;
	COLOR.a = n_out6p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -401.344, -13.217 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 300, 200 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -420, 80 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -420, 160 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -440, 280 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -440, 360 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -200, 80 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -200, 280 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 100, 120 )
nodes/fragment/connections = PackedInt32Array( 3, 0, 6, 2, 2, 0, 6, 0, 4, 0, 7, 0, 5, 0, 7, 2, 6, 0, 8, 0, 7, 0, 8, 1, 8, 0, 0, 0, 6, 1, 0, 1 )
